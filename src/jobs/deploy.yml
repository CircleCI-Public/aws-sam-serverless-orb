description: >
  Deploy serverless applications.
executor:
  name: default
  machine-image: <<parameters.machine-image>>
parameters:
  machine-image:
    default: ubuntu-2204:2022.07.1
    type: string
    description: >
      The CircleCI Linux Machine VM Image for this job. Find other available machine images here: https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
  version:
    description: 'SAM CLI version to be installed.'
    type: string
    default: latest
  python_version:
    description: 'If set, this version of Python will be installed and set with pyenv globally. ex: "3.7.0" This is only for the local environment and will not have any effect if use-container is enabled.9'
    type: string
    default: ""
  pre-deploy:
    type: steps
    default: []
    description: "Run these steps prior to deploying the application, but after the checkout, install, build, and package steps."
  capabilities:
    type: string
    description: Comma separated list of capabilities for AWS Cloudformation to create stacks. The only valid values are CAPABILITY_IAM and CAPABILITY_NAMED_IAM. If you have IAM resources, you can specify either capability. If you have IAM resources with custom names, you must specify CAPABILITY_NAMED_IAM.
    default: "CAPABILITY_IAM"
  validate:
    type: boolean
    default: true
    description: "Validate your template file. This will run unless manually set to false."
  build-dir:
    type: string
    description: The path to a folder where the built artifacts are stored.
    default: ""
  base-dir:
    type: string
    description: Resolves relative paths to the function's source code with respect to this folder. Use this if the AWS SAM template and your source code aren't in the same enclosing folder. By default, relative paths are resolved with respect to the template's location.
    default: ""
  template:
    type: string
    description: The AWS SAM template file
  s3-bucket:
    type: string
    description: The name of the S3 bucket where this command uploads the artifacts that are referenced in your template. If this option is set, the SAM package command will be run automatically.
    default: ""
  resolve-s3:
    type: boolean
    description: Automatically create an Amazon S3 bucket to use for packaging and deploying for non-guided deployments. If you specify the --guided option, then the AWS SAM CLI ignores --resolve-s3. If you specify both the --s3-bucket and --resolve-s3 options, then an error occurs.
    default: false
  image-repositories:
    type: string
    description: Comma separated list of the ECR image repositories to push the Lambda container. If this option is set, the SAM package command will be run automatically.
    default: ""
  profile-name:
    type: string
    description: Select a specific profile from your credential file to get AWS credentials.
    default: "default"
  use-container:
    type: boolean
    description: If your functions depend on packages that have natively compiled dependencies, use this flag to build your function inside an AWS Lambda-like Docker container.
    default: true
  region:
    type: string
    description: Sets the AWS Region of the service (for example, us-east-1).
    default: ${AWS_DEFAULT_REGION} # set this to aws install region
  stack-name:
    type: string
    description: The name of the AWS CloudFormation stack you're deploying to. If you specify an existing stack, the command updates the stack. If you specify a new stack, the command creates it.
  debug:
    type: boolean
    description: Turns on debug logging.
    default: false
  parameter-overrides:
    type: string
    description: AWS CloudFormation parameter overrides encoded as key=value pairs. Use the same format as the AWS CLI.
    default: ""
  no-fail-on-empty-changeset:
    type: boolean
    description: Specify if deploy command hould return a zero exit code if there are no changes to be made to the stack.
    default: true
  arguments:
    type: string
    description: Additional arguments to pass to the deploy command. e.x. (--resolve-image-repos)
    default: ""
  auth:
    description: |
      The authentication method used to access your AWS account. Import the aws-cli orb in your config and
      provide the aws-cli/setup command to authenticate with your preferred method. View examples for more information.
    type: steps
steps:
  - checkout
  - install:
      version: << parameters.version >>
      python_version: << parameters.python_version >>
  - steps: << parameters.auth >>
  - build:
      validate: << parameters.validate >>
      build-dir: << parameters.build-dir >>
      base-dir: << parameters.base-dir >>
      template: << parameters.template >>
      profile-name: << parameters.profile-name >>
      use-container: << parameters.use-container >>
      aws-region: << parameters.aws-region >>
      debug: << parameters.debug >>
  - steps: << parameters.pre-deploy >>
  - deploy:
      capabilities: << parameters.capabilities >>
      stack-name: << parameters.stack-name >>
      profile-name: << parameters.profile-name >>
      aws-region: << parameters.aws-region >>
      debug: << parameters.debug >>
      parameter-overrides: << parameters.parameter-overrides >>
      no-fail-on-empty-changeset: << parameters.no-fail-on-empty-changeset >>
      image-repositories: << parameters.image-repositories >>
      s3-bucket: << parameters.s3-bucket >>
      resolve-s3: << parameters.resolve-s3 >>
      arguments: << parameters.arguments >>
